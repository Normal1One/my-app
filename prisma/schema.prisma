datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id             String    @id @default(cuid())
    name           String?
    email          String?   @unique
    emailVerified  DateTime?
    image          String?
    hashedPassword String?
    role           Role      @default(USER)
    accounts       Account[]
    sessions       Session[]
    posts          Post[]    @relation("AuthoredPosts")
    favorites      Post[]    @relation("FavoritePosts")
}

model Post {
    id            String   @id @default(cuid())
    title         String
    text          String
    viewCount     Int      @default(0)
    createdAt     DateTime @default(now())
    author        User     @relation("AuthoredPosts", fields: [authorId], references: [id], onDelete: Cascade)
    authorId      String
    favoritedBy   User?    @relation("FavoritePosts", fields: [favoritedById], references: [id], onDelete: Cascade)
    favoritedById String?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Role {
    USER
    ADMIN
}
